package com.rajan;

import com.amazonaws.auth.AWSCredentials;
import com.amazonaws.auth.AWSStaticCredentialsProvider;
import com.amazonaws.auth.BasicAWSCredentials;
import com.amazonaws.regions.Regions;
import com.amazonaws.services.iot.AWSIot;
import com.amazonaws.services.iot.AWSIotClient;
import com.amazonaws.services.iot.AWSIotClientBuilder;
import com.amazonaws.services.iot.client.AWSIotException;
import com.rajan.utils.IotJobUtils;
import com.rajan.utils.PropertyUtil;

import javafx.application.Application;
import javafx.event.EventHandler;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.stage.Stage;
import javafx.stage.WindowEvent;

public class StartApplication extends Application {

	@Override
	public void start(Stage primaryStage) throws Exception {
		Parent root = FXMLLoader.load(getClass().getClassLoader().getResource("fxml/JobUI.fxml"));
		primaryStage.setTitle("AWS IOT Jobs Demo");
		primaryStage.setScene(new Scene(root, 600, 450));
		primaryStage.setOnCloseRequest(new EventHandler<WindowEvent>() {
			public void handle(WindowEvent we) {
				try {
					IotJobUtils.getAWS_IOT_CLIENT().disconnect();
				} catch (AWSIotException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
		});
		primaryStage.show();
	}

	public static void main(String[] args) {
//        launch(args);
			AWSCredentials awsCredentials = new BasicAWSCredentials(PropertyUtil.getConfig("awsAccessKeyId"),
					PropertyUtil.getConfig("awsSecretAccessKey"));
			AWSIot iotClient = AWSIotClientBuilder.standard().withCredentials(new AWSStaticCredentialsProvider(awsCredentials))
					.withRegion(PropertyUtil.getConfig("awsRegion")).build();
	}
}