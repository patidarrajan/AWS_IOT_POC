package com.rajan;

import java.util.List;

import com.amazonaws.auth.AWSCredentials;
import com.amazonaws.auth.AWSStaticCredentialsProvider;
import com.amazonaws.auth.BasicAWSCredentials;
import com.amazonaws.services.iot.AWSIot;
import com.amazonaws.services.iot.AWSIotClientBuilder;
import com.amazonaws.services.iot.client.AWSIotException;
import com.amazonaws.services.iot.model.ListThingsRequest;
import com.amazonaws.services.s3.AmazonS3;
import com.amazonaws.services.s3.AmazonS3ClientBuilder;
import com.amazonaws.services.s3.model.Bucket;
import com.rajan.utils.IotJobUtils;
import com.rajan.utils.PropertyUtil;

import javafx.application.Application;
import javafx.event.EventHandler;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.stage.Stage;
import javafx.stage.WindowEvent;

public class StartApplication extends Application {

	@Override
	public void start(Stage primaryStage) throws Exception {
		Parent root = FXMLLoader.load(getClass().getClassLoader().getResource("fxml/JobUI.fxml"));
		primaryStage.setTitle("AWS IOT Jobs Demo");
		primaryStage.setScene(new Scene(root, 600, 450));
		primaryStage.setOnCloseRequest(new EventHandler<WindowEvent>() {
			public void handle(WindowEvent we) {
				try {
					IotJobUtils.getAWS_IOT_CLIENT().disconnect();
				} catch (AWSIotException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
		});
		primaryStage.show();
	}

	public static void main(String[] args) {
//        launch(args);
		AWSCredentials awsCredentials = new BasicAWSCredentials(PropertyUtil.getConfig("awsAccessKeyId"),
				PropertyUtil.getConfig("awsSecretAccessKey"));
		AWSIot iotClient = AWSIotClientBuilder.standard()
				.withCredentials(new AWSStaticCredentialsProvider(awsCredentials))
				.withRegion(PropertyUtil.getConfig("awsRegion")).build();
		System.out.println(iotClient.listThings(new ListThingsRequest()));
		
		 AmazonS3 s3 = AmazonS3ClientBuilder..standard()
					.withCredentials(new AWSStaticCredentialsProvider(awsCredentials))
					.withRegion(PropertyUtil.getConfig("awsRegion")).build();
		 List<Bucket> buckets = s3.listBuckets();
		 System.out.println("Your Amazon S3 buckets are:");
		 for (Bucket b : buckets) {
		     System.out.println("* " + b.getName());
		 }
	}
}