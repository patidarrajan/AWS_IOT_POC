package com.rajan.utils;

import java.util.List;
import java.util.stream.Collectors;

import com.amazonaws.auth.AWSStaticCredentialsProvider;
import com.amazonaws.auth.BasicAWSCredentials;
import com.amazonaws.services.iot.AWSIot;
import com.amazonaws.services.iot.AWSIotClientBuilder;
import com.amazonaws.services.iot.model.CreateJobRequest;
import com.amazonaws.services.iot.model.ListThingsRequest;
import com.amazonaws.services.iot.model.ThingAttribute;
import com.amazonaws.services.s3.AmazonS3;
import com.amazonaws.services.s3.AmazonS3ClientBuilder;
import com.amazonaws.services.s3.model.Bucket;
import com.amazonaws.services.s3.model.ListObjectsV2Result;
import com.amazonaws.services.s3.model.S3ObjectSummary;

public class AwsBuilderUtils {
	private static AwsBuilderUtils awsBuilderUtils;
	private BasicAWSCredentials awsCredentials;
	private AWSIot iotClient;
	private AmazonS3 s3;

	public static AwsBuilderUtils getInstance() {
		if (awsBuilderUtils == null) {
			awsBuilderUtils = new AwsBuilderUtils();
			awsBuilderUtils.init();
			return awsBuilderUtils;
		}
		return awsBuilderUtils;
	}

	/**
	 * AWS component initializer
	 */
	public void init() {
		awsCredentials = new BasicAWSCredentials(PropertyUtil.getConfig("awsAccessKeyId"),
				PropertyUtil.getConfig("awsSecretAccessKey"));
		iotClient = AWSIotClientBuilder.standard().withCredentials(new AWSStaticCredentialsProvider(awsCredentials))
				.withRegion(PropertyUtil.getConfig("awsRegion")).build();
		s3 = AmazonS3ClientBuilder.standard().withCredentials(new AWSStaticCredentialsProvider(awsCredentials))
				.withRegion(PropertyUtil.getConfig("awsRegion")).build();
	}

	/**
	 * list s3 bucket
	 * 
	 * @return 
	 */
	public List<String> listS3Buckets() {
		System.out.println(s3.listBuckets().toString());
		return s3.listBuckets().stream().map(bucket -> bucket.getName()).collect(Collectors.toList());
	}

	/**
	 * list s3 objects key from bucket
	 * 
	 * @param bucket_name
	 * @return
	 */
	public List<S3ObjectSummary> listS3ObjectsKeyFromBucket(String bucket_name) {
		ListObjectsV2Result result = s3.listObjectsV2(bucket_name);
		return result.getObjectSummaries();

	}

	/**
	 * list things
	 * 
	 * @param listThingsRequest
	 * @return
	 */
	public List<ThingAttribute> listThing(ListThingsRequest listThingsRequest) {
		return iotClient.listThings(listThingsRequest).getThings();
	}
	
	/**
	 * create job 
	 * @param createJobRequest
	 */
	public void createJob(CreateJobRequest createJobRequest) {
		iotClient.createJob(createJobRequest);
	}
}
